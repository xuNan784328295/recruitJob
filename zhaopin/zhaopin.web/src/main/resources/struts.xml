<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>
    <!-- Struts2全局配置 -->
    <constant name="struts.action.extension" value="whtml"/>
    <constant name="struts.locale" value="zh_CN" />
    <constant name="struts.custom.i18n.resources" value="messages"/>
    <constant name="struts.i18n.encoding" value="UTF-8"/>
    <constant name="struts.objectFactory" value="spring"/>
    <constant name="struts.objectFactory.spring.autoWire" value="name"/>
    <constant name="struts.objectFactory.spring.useClassCache" value="true"/>
    <!-- 单次上传的文件最大：50MB -->
    <constant name="struts.multipart.maxSize" value="52428800"/>

    <!-- 他包都会继承iface-json，返回JSON数据 -->
    <package name="iface-json" namespace="/" extends="json-default">
        <!-- Struts2拦截器，用户身份认证 -->
        <interceptors>
            <interceptor name="sessionInterceptor" class="com.hanvon.zhaopin.web.interceptor.SessionInterceptor"/>
            <interceptor-stack name="securityStack">
                <interceptor-ref name="sessionInterceptor"/>
                <interceptor-ref name="json"/>
                <interceptor-ref name="defaultStack"/>
            </interceptor-stack>
        </interceptors>

        <!-- 设置默认的拦截器栈：拦截所有动作 -->
        <default-interceptor-ref name="securityStack"/>

        <!-- 全局results -->
        <global-results>
            <result name="input">/login.html</result>
            <result name="success">/index.html</result>
            <result name="notLoginError" type="redirect">/notLogin.whtml</result>
            <!-- 返回JSON数据类型 -->
            <result name="JSON_RESULT" type="json">
                <!-- 指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">jsonResult</param>
                <!--<param name="excludeNullProperties">true</param>-->
            </result>
        </global-results>
    </package>

    <bean type="org.apache.struts2.dispatcher.multipart.MultiPartRequest"
          name="requestParser" class="com.hanvon.iface.web.upload.JakartaMultiPartRequest"
          scope="default" optional="true" />
    <constant name="struts.multipart.parser" value="requestParser" />
    <constant name="struts.multipart.handler" value="requestParser" />

    <!-- 添加外部配置文件 -->
    <!-- 访问路径为：http://{host:port}/{namespace}/{actionName}.whtml -->
    <include file="struts/LoginAction.xml"/>
    <include file="struts/RecruitAction.xml"/>
</struts>

